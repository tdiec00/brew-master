{"ast":null,"code":"var _jsxFileName = \"/Users/trungdiec/thunder/unit1/project1/brew-master/src/components/DisplayBeerInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport RemoveDuplicates from \"./RemoveDuplicates\";\nimport FavoritesButton from \"./FavoritesButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayBeerInfo = () => {\n  _s();\n\n  var _base$ingredients, _base$ingredients2, _base$method, _base$method$fermenta, _base$method$fermenta2, _base$method2, _base$method2$ferment, _base$method2$ferment2, _base$method3, _base$method3$mash_te, _base$method3$mash_te2, _base$method4, _base$method4$mash_te, _base$method4$mash_te2, _base$method5, _base$method5$mash_te;\n\n  const params = useParams();\n  const {\n    id\n  } = params;\n  const [beerData, setBeerData] = useState({});\n  const [favorite, setFavorite] = useState({});\n  const [checkBeerData, setCheckBeerData] = useState(false);\n  const base = beerData[0];\n  useEffect(() => {\n    const fetchData = async () => {\n      let url = `https://api.punkapi.com/v2/beers/`;\n      let res = await axios.get(`${url}${id}`);\n      setBeerData(res.data[0]);\n      console.log(beerData);\n      console.log(1);\n      setFavorite(res.data[0]);\n    };\n\n    console.log(beerData);\n    console.log(2);\n    setCheckBeerData(true);\n    fetchData();\n  }, []);\n  console.log(beerData);\n  console.log(3);\n\n  if (checkBeerData === true) {\n    console.log(4);\n  }\n\n  console.log(favorite);\n  console.log(beerData.name); // setCheckBeerData(true)\n  //   if (checkBeerData === true) {\n  //     setFavorite(beerData);\n  //     console.log({ favorite });\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Beer Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: base === null || base === void 0 ? void 0 : base.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: base === null || base === void 0 ? void 0 : base.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ingredient List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Yeast List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: base === null || base === void 0 ? void 0 : (_base$ingredients = base.ingredients) === null || _base$ingredients === void 0 ? void 0 : _base$ingredients.yeast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Malt List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), base === null || base === void 0 ? void 0 : (_base$ingredients2 = base.ingredients) === null || _base$ingredients2 === void 0 ? void 0 : _base$ingredients2.malt.map(malt => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: malt === null || malt === void 0 ? void 0 : malt.name\n      }, malt === null || malt === void 0 ? void 0 : malt.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hops List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RemoveDuplicates, {\n      base: base\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Brewing Guidline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fermentation Temperature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${base === null || base === void 0 ? void 0 : (_base$method = base.method) === null || _base$method === void 0 ? void 0 : (_base$method$fermenta = _base$method.fermentation) === null || _base$method$fermenta === void 0 ? void 0 : (_base$method$fermenta2 = _base$method$fermenta.temp) === null || _base$method$fermenta2 === void 0 ? void 0 : _base$method$fermenta2.value} degrees ${base === null || base === void 0 ? void 0 : (_base$method2 = base.method) === null || _base$method2 === void 0 ? void 0 : (_base$method2$ferment = _base$method2.fermentation) === null || _base$method2$ferment === void 0 ? void 0 : (_base$method2$ferment2 = _base$method2$ferment.temp) === null || _base$method2$ferment2 === void 0 ? void 0 : _base$method2$ferment2.unit}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mash Temperature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${base === null || base === void 0 ? void 0 : (_base$method3 = base.method) === null || _base$method3 === void 0 ? void 0 : (_base$method3$mash_te = _base$method3.mash_temp[0]) === null || _base$method3$mash_te === void 0 ? void 0 : (_base$method3$mash_te2 = _base$method3$mash_te.temp) === null || _base$method3$mash_te2 === void 0 ? void 0 : _base$method3$mash_te2.value} degrees ${base === null || base === void 0 ? void 0 : (_base$method4 = base.method) === null || _base$method4 === void 0 ? void 0 : (_base$method4$mash_te = _base$method4.mash_temp[0]) === null || _base$method4$mash_te === void 0 ? void 0 : (_base$method4$mash_te2 = _base$method4$mash_te.temp) === null || _base$method4$mash_te2 === void 0 ? void 0 : _base$method4$mash_te2.unit}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mash Duration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${base === null || base === void 0 ? void 0 : (_base$method5 = base.method) === null || _base$method5 === void 0 ? void 0 : (_base$method5$mash_te = _base$method5.mash_temp[0]) === null || _base$method5$mash_te === void 0 ? void 0 : _base$method5$mash_te.duration} minutes`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FavoritesButton, {\n      favorite: favorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayBeerInfo, \"KYR0C3E1Qx+SqkG6qbiAGoNyT18=\", false, function () {\n  return [useParams];\n});\n\n_c = DisplayBeerInfo;\nexport default DisplayBeerInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayBeerInfo\");","map":{"version":3,"sources":["/Users/trungdiec/thunder/unit1/project1/brew-master/src/components/DisplayBeerInfo.jsx"],"names":["useParams","axios","useState","useEffect","RemoveDuplicates","FavoritesButton","DisplayBeerInfo","params","id","beerData","setBeerData","favorite","setFavorite","checkBeerData","setCheckBeerData","base","fetchData","url","res","get","data","console","log","name","description","ingredients","yeast","malt","map","method","fermentation","temp","value","unit","mash_temp","duration"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\"\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport RemoveDuplicates from \"./RemoveDuplicates\";\nimport FavoritesButton from \"./FavoritesButton\";\n\nconst DisplayBeerInfo = () => {\n  const params = useParams();\n  const { id } = params;\n  const [beerData, setBeerData] = useState({});\n  const [favorite, setFavorite] = useState({});\n  const [checkBeerData, setCheckBeerData] = useState(false);\n  const base = beerData[0];\n  \n  \n  useEffect(() => {\n    const fetchData = async () => {\n      let url = `https://api.punkapi.com/v2/beers/`\n      let res = await axios.get(`${url}${id}`);\n      setBeerData(res.data[0]);\n      console.log(beerData);\n      console.log(1);\n      setFavorite(res.data[0]);\n      \n    };  \n    console.log(beerData);\n    console.log(2);\n    setCheckBeerData(true);\n  fetchData()\n  },[])\n  console.log(beerData)\n  console.log(3);\n  if (checkBeerData === true) {\n    console.log(4);\n  }\n  console.log(favorite);\n  console.log(beerData.name);\n  // setCheckBeerData(true)\n  //   if (checkBeerData === true) {\n  //     setFavorite(beerData);\n  //     console.log({ favorite });\n  //   };\n\n  return (\n    <div>\n      <h1>Beer Name</h1>\n      <p>{base?.name}</p>\n      <h1>Description</h1>\n      <p>{base?.description}</p>\n      <h1>Ingredient List</h1>\n      <h2>Yeast List</h2>\n      <p>{base?.ingredients?.yeast}</p>\n      <h2>Malt List</h2>\n      {base?.ingredients?.malt.map((malt)=>{\n        return <p key={malt?.name}>{malt?.name}</p>\n      })}\n      <h2>Hops List</h2>\n      <RemoveDuplicates base={base}/>\n      <h1>Brewing Guidline</h1>\n      <h2>Fermentation Temperature</h2>\n      <p>{`${base?.method?.fermentation?.temp?.value} degrees ${base?.method?.fermentation?.temp?.unit}`}</p>\n      <h2>Mash Temperature</h2>\n      <p>{`${base?.method?.mash_temp[0]?.temp?.value} degrees ${base?.method?.mash_temp[0]?.temp?.unit}`}</p>\n      <h2>Mash Duration</h2>\n      <p>{`${base?.method?.mash_temp[0]?.duration} minutes`}</p>\n      <FavoritesButton favorite={favorite}/>\n    </div>\n  )\n}\n\nexport default DisplayBeerInfo\n\n"]},"metadata":{},"sourceType":"module"}
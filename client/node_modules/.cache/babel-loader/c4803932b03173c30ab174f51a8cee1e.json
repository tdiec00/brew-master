{"ast":null,"code":"import{createBrowserHistory}from'history';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Alphabetize=function Alphabetize(_ref){var datas=_ref.datas;var history=createBrowserHistory();var handleChange=function handleChange(value){history.push(\"/description/\".concat(value));history.go();};var beerArr=[];datas.map(function(data){beerArr.push({id:data.id,name:data.name});});beerArr.sort(function(a,b){return a.name-b.name;});return/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(event){return handleChange(event.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{children:\"Select a Beer\"}),beerArr.map(function(beer){return/*#__PURE__*/_jsx(\"option\",{value:beer.id,children:beer.name},beer.id);})]});};export default Alphabetize;","map":{"version":3,"sources":["/Users/trungdiec/thunder/unit1/project1/brew-master/src/components/Alphabetize.jsx"],"names":["createBrowserHistory","Alphabetize","datas","history","handleChange","value","push","go","beerArr","map","data","id","name","sort","a","b","event","target","beer"],"mappings":"AAAA,OAASA,oBAAT,KAAqC,SAArC,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAEjC,GAAIC,CAAAA,OAAO,CAAGH,oBAAoB,EAAlC,CAEA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BF,OAAO,CAACG,IAAR,wBAA6BD,KAA7B,GACAF,OAAO,CAACI,EAAR,GACD,CAHD,CAKA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACAN,KAAK,CAACO,GAAN,CAAU,SAACC,IAAD,CAAU,CAClBF,OAAO,CAACF,IAAR,CAAa,CAAEK,EAAE,CAAED,IAAI,CAACC,EAAX,CAAeC,IAAI,CAAEF,IAAI,CAACE,IAA1B,CAAb,EACD,CAFD,EAGAJ,OAAO,CAACK,IAAR,CAAa,SAAUC,CAAV,CAAaC,CAAb,CAAgB,CAC3B,MAAOD,CAAAA,CAAC,CAACF,IAAF,CAASG,CAAC,CAACH,IAAlB,CACD,CAFD,EAIA,mBACE,gBAAQ,QAAQ,CAAE,kBAAAI,KAAK,QAAIZ,CAAAA,YAAY,CAACY,KAAK,CAACC,MAAN,CAAaZ,KAAd,CAAhB,EAAvB,wBACE,yCADF,CAEGG,OAAO,CAACC,GAAR,CAAY,SAACS,IAAD,CAAU,CACrB,mBACE,eAAsB,KAAK,CAAEA,IAAI,CAACP,EAAlC,UAAuCO,IAAI,CAACN,IAA5C,EAAaM,IAAI,CAACP,EAAlB,CADF,CAGD,CAJA,CAFH,GADF,CAUD,CA3BD,CA6BA,cAAeV,CAAAA,WAAf","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst Alphabetize = ({ datas }) => {\n\n  let history = createBrowserHistory();\n\n  const handleChange = (value) => {\n    history.push(`/description/${value}`);\n    history.go();\n  }\n    \n  let beerArr = [];\n  datas.map((data) => {\n    beerArr.push({ id: data.id, name: data.name });\n  })\n  beerArr.sort(function (a, b) {\n    return a.name - b.name\n  });\n  \n  return (\n    <select onChange={event => handleChange(event.target.value)}>\n      <option>Select a Beer</option>\n      {beerArr.map((beer) => {\n        return (\n          <option key={beer.id} value={beer.id}>{beer.name}</option>\n        )\n      })}\n    </select>\n  )\n};\n\nexport default Alphabetize\n"]},"metadata":{},"sourceType":"module"}